---
title: "Lab 4"
author: "Griffin Shelor"
format: pdf
---

```{r}
## loading packages
library(pacman)
p_load(tidyverse, here, plyr)
```

## Section 2: Problem
```{r}
### step 1
## creating dataset
set.seed(2021)
y <- rpois(50, 6.4)
## variance
y_var <- var(y)
y_var

### Step 2
## plot the data with density on the y-axis
hist(y, probability = TRUE, main = "Probability Density of Simulated Values")
plot(count(y), type = 'h')

### Step 3
## setting priors
mu_prior <- 10.2
sigma_prior <- 0.5

### Step 4
step <- 0.01
theta <- seq(0, 15, step)
```

## Section 3
```{r}
### Question 6
## moment matching
## prior function
gamma_func <- function(mu, sigma, theta){
  alpha <- (mu^2) / (sigma^2)
  beta <- mu / sigma^2
  ## calculating probability density
  dgamma(theta, alpha, beta)
}
## calling function
gamma_vals <- gamma_func(mu_prior, sigma_prior, theta)

### Question 7
plot(theta, gamma_vals, type = 'l', xlab = "Theta", ylab = "Density")

### Question 8
alpha <- (mu_prior^2) / (sigma_prior^2)
beta <- mu_prior / sigma_prior^2
moment_check <- rgamma(100000, alpha, beta)
mean(moment_check)
sd(moment_check)
```
## The Likelihood
```{r}
### Question 10
## likelihood function
likelihood_func <- function(data, theta_arg){
  total_likelihood <- rep(0,length(theta_arg))
  for (x in 1:length(theta_arg)){
    likelihood <- prod(dpois(data, lambda = theta_arg[x]))
    total_likelihood[x] <- likelihood
    }
  return(total_likelihood)
}

likelihood_vals <- likelihood_func(y, theta)
### Question 11
plot(theta, likelihood_vals, type = 'l')
```
## Question 16
```{r}
joint <- function(mu, sigma, data_arg, theta_arg){
  prior_gamma <- gamma_func(mu, sigma, theta_arg)
  likelihood_vals <- likelihood_func(data_arg, theta_arg)
  joint_vals <- prior_gamma * likelihood_vals
  return(joint_vals)
}
joint_dist <- joint(mu_prior, sigma_prior, y, theta)
plot(theta, joint_dist, type = 'l', main = "Joint Distribution")
```

# Marginal Distribution
## Question 20


# Posterior Distribution

# Putting it all together
## question 29
```{r}
## creating dataset
set.seed(2021)
y <- rpois(50, 6.4)
## variance
y_var <- var(y)
y_var

### Step 2
## plot the data with density on the y-axis
hist(y, probability = TRUE, main = "Probability Density of Simulated Values")

### Step 3
## setting priors
mu_prior <- 10.2
sigma_prior <- 2.5

### initializing theta
step <- 0.01
theta <- seq(0, 15, step)

## prior function
gamma_func <- function(mu, sigma, theta){
  alpha <- (mu^2) / (sigma^2)
  beta <- mu / sigma^2
  ## calculating probability density
  dgamma(theta, alpha, beta)
}
## calling function
gamma_vals <- gamma_func(mu_prior, sigma_prior, theta)

## plotting theta
plot(theta, gamma_vals, type = 'l', xlab = "Theta", ylab = "Density")

## calculating alpha
alpha <- (mu_prior^2) / (sigma_prior^2)
beta <- mu_prior / sigma_prior^2


## likelihood function
likelihood_func <- function(data, theta_arg){
  total_likelihood <- rep(0,length(theta_arg))
  for (x in 1:length(theta_arg)){
    likelihood <- prod(dpois(data, lambda = theta_arg[x]))
    total_likelihood[x] <- likelihood
    }
  return(total_likelihood)
}

likelihood_vals <- likelihood_func(y, theta)
## plotting likelihood as a function of theta
plot(theta, likelihood_vals, type = 'l')

## creating joint distribution
joint <- function(mu, sigma, data_arg, theta_arg){
  prior_gamma <- gamma_func(mu, sigma, theta_arg)
  likelihood_vals <- likelihood_func(data_arg, theta_arg)
  joint_vals <- prior_gamma * likelihood_vals
  return(joint_vals)
}
joint_dist <- joint(mu_prior, sigma_prior, y, theta)
## plotting joint dist as a function of theta
plot(theta, joint_dist, type = 'l', main = "Joint Distribution")
```

