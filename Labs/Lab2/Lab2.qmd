---
title: "Lab 2: Probability"
format: pdf
---
```{r}
#| output: FALSE
library(pacman)
pacman::p_load(tidyverse, MASS, here, gtExtras, RColorBrewer)
```

## Probability Distributions (7.4.1)

```{r}
set.seed(802)
## setting list of possible responses and prior probabilities for each response
responses <- c("Strongly disagree", "Disagree", "Neither agree nor disagree", "Agree", "Strongly Agree")
prob_vector <- c(0.07, 0.13, 0.15, 0.23, 0.42)

## simulating one realization of survey data with given probabilities
simulation <- sample(responses, 80, replace = TRUE, prob = prob_vector)

## totaling up counts of each response
counts <- c(0,0,0,0,0)
for (x in simulation) {
  if (x == "Strongly disagree"){
    counts[1] = counts[1] + 1
  } else if (x == "Disagree") {
    counts[2] = counts[2] + 1
  } else if (x == "Neither agree nor disagree") {
    counts[3] = counts[3] + 1
  } else if (x == "Agree") {
    counts[4] = counts[4] + 1
  } else {
    counts[5] = counts[5] + 1
  }
}
simulation_df <- data.frame(responses, counts)

## making a table with simulation_df
simulation_table <- simulation_df |>
  gt() |> # use 'gt' to make an awesome table...
  gt_theme_538() |>
  tab_header(title = "Counts of Survey Responses")  |>
  data_color( # Update cell colors, testing different color palettes
    columns = c(counts),
    fn = scales::col_numeric( # <- bc it's numeric
      palette = brewer.pal(5, "Blues"), # A color scheme (gradient)
      domain = c(), # Column scale endpoints
      reverse = FALSE
    )
  ) |>
  cols_label(responses = "Survey Responses", counts = "Counts") # Update labels
simulation_table

simulation_table |>
  gtsave(
    "Lab2_Section7_Q4.png",
    path = here("Labs", "Lab2")
  )
```


## Disease Prevalence (7.6)
```{r}
set.seed(802)
prevalence_prob_dbinom <- dbinom(4, 24, 0.12)
prevalence_prob_dbinom
```

## Nitrogen fixation, (7.8)
```{r}
set.seed(802)
nitrogen_25_fix <- pnorm(0.025, 1.9, 1.4)
nitrogen_25_fix_q <- qnorm(0.025, 1.9, 1.4)
nitrogen_25_fix_q
```
## Continuous Random Variables (8.2)
```{r}
DrawRates=function(n,int,int.sd,inf,inf.sd,rho.rates){
covar=rho.rates*int.sd*inf.sd
Sigma=matrix(c(int.sd^2,covar,covar,inf.sd^2),2,2)
mu=c(int,inf)
x=(mvrnorm(n=n,mu=mu,Sigma))
#x[x[,2]<0]=0 #do not allow for deflation
return(x)
}
mu.int=0.0531
sd.int=0.0746
mu.inf=0.03
sd.inf=0.015
rho=0.5
n=10000
x=DrawRates(n,int=mu.int,int.sd=sd.int,inf=mu.inf,inf.sd=sd.inf,rho.rates=rho)
plot(x[,1],x[,2],pch=19,cex=.05,xlab="Rate of return",ylab="Rate of inflation")
```
# Moment Matching
## Above Ground biomass (9.1)
```{r}
set.seed(802)
## probability density of 94 given mean and standard deviation
biomass_94 <- dlnorm(94, meanlog = log(103.4), sdlog = log(23.3))
biomass_94

## probability that plot will contain between 90 and 110 gm of biomass
biomass_90 <- plnorm(90, meanlog = log(103.4), sdlog = log(23.3))
biomass_110 <- plnorm(110, meanlog = log(103.4), sdlog = log(23.3))
biomass_90_110 <- biomass_110 - biomass_90
biomass_90_110
```

## Simulating 10,000 data points in normal and lognormal with mean 0 and SD 1 (9.2)
```{r}
set.seed(802)
normal_data <- rnorm(10000,0,1)
lognormal_data <- rlnorm(10000,0,1)

## making histograms
par(mfrow = c(1,2))
hist(normal_data, probability = TRUE)
hist(lognormal_data, probability = TRUE)
```
### 9.2, continued
$\mu = e^{(\alpha + \beta/2)}$
$\mu = e^{0 + 1/2}$
$\mu = e^{1/2}$

$\sigma^2 = e^2 - e$

```{r}
## 9.2, checking mu and sigma against distributions
mu <- exp(0.5)
sigma_sqd <- exp(2) - exp(1)

mean_diff <- mu - mean(lognormal_data)
sigma_diff <- sigma_sqd - var(lognormal_data)
mean_diff
sigma_diff

## creating different normal and lognormal distributions with more draws
# increasing to 100,000
set.seed(802)
normal_data_v2 <- rnorm(100000,0,1)
lognormal_data_v2 <- rlnorm(100000,0,1)

## plotting histogram of the lognormal simulation with more samples
hist(lognormal_data_v2, probability = TRUE)

mean_diff_v2 <- mu - mean(lognormal_data_v2)
sigma_diff_v2 <- sigma_sqd - var(lognormal_data_v2)
mean_diff_v2
sigma_diff_v2
```
## 9.2, continued, simulating normal and lognormal data with different means and variances
```{r}
set.seed(802)
normal_data_v3 <- rnorm(10000,5,1.5)
lognormal_data_v3 <- rlnorm(10000,log(5),log(1.5))

## making histograms
par(mfrow = c(1,2))
hist(normal_data_v3, probability = TRUE)
hist(lognormal_data_v3, probability = TRUE)
```
Moment matching mu:

$\mu = e^{(\alpha + \beta/2)}$

$\mu = e^{1.609438 + 0.4054651/2}$

$\mu = e^{1.81217}$

moment matching sigma:

$\sigma^2 = (e^{\beta^2} - 1)e^{2\alpha+\beta^2}$

$\sigma^2 = (e^{0.4054651^2} - 1)e^{2*1.609438 + 0.4055651^2}$

$\sigma^2 = (e^{0.164402} - 1)e^{3.218876 + 0.164402}$

$\sigma^2 = (e^{0.164402}-1)e^{3.383278}$

$\sigma^2 = e^{3.54768} - e^{3.383278}$

```{r}
## 9.2, checking mu and sigma against distributions with different means
alpha <- log(5)
beta <- log(1.5)
mu_v3 <- exp(alpha + (beta^2))
sigma_sqd_v3 <- exp((beta^2) - 1) - exp((2*alpha) + (beta^2))
mu_v3
sigma_sqd_v3

mean_diff_v3 <- mu_v3 - mean(lognormal_data_v3)
sigma_diff_v3 <- sigma_sqd_v3 - var(lognormal_data_v3)
mean_diff_v3
sigma_diff_v3

```
## 9.3 Rare Plant Patches

```{r}
## 9.3.a
set.seed(802)
alpha <- (0.04^2 - 0.04^3 - 0.04 * 0.01^2)/ (0.01^2)
beta <- (0.04 - (2 * 0.04^2) + 0.04^3 - 0.01^2 + (0.04 * 0.01^2))/ (0.01^2)
curve(dbeta(x, alpha, beta), from = 0, to = 1, 
      main = "Probability Distribution of phi", xlab = bquote(phi), 
      ylab = "Density")

## 9.3.b
dbinom(5, 50, 0.04)

## 9.3.c
probs <- rep(0,10)
for (x in (1:10)){
  prob <- dbinom(x, 50, prob = 0.04)
  probs[x] <- prob
}
plot(probs, type = 'l', main = "Probability of Between 1-10 Patches Being Occupied", ylab = "Probability")

## 9.3.d
1 - pbinom(5, 50, 0.04)

## 9.3.e
probs <- rep(0,50)
for (x in (1:50)){
  prob <- pbinom(x, 50, prob = 0.04)
  probs[x] <- prob
}
plot(probs, type = 'l', main = "Cumulative Probability of Patches Being Occupied", ylab = "Probability")

## 9.3.f
set.seed(802)
## setting prior probability
outcomes <- c("Occupied", "Empty")
prob_vector <- c(0.04, 0.96)

## simulating one realization of data with given probability
simulation_75 <- sample(outcomes, 75, replace = TRUE, prob = prob_vector)

## totaling up counts of each response
counts <- c(0,0)
for (x in simulation_75) {
  if (x == "Occupied"){
    counts[1] = counts[1] + 1
  } else{
    counts[2] = counts[2] + 1
  }
}
simulation_75df <- data.frame(outcomes, counts)

## making a table with simulation_df
simulation_table <- simulation_75df |>
  gt() |> # use 'gt' to make an awesome table...
  gt_theme_538() |>
  tab_header(title = "Patch Presence or Absence")  |>
  data_color( # Update cell colors, testing different color palettes
    columns = c(counts),
    fn = scales::col_numeric( # <- bc it's numeric
      palette = brewer.pal(2, "Blues"), # A color scheme (gradient)
      domain = c(), # Column scale endpoints
      reverse = FALSE
    )
  ) |>
  cols_label(outcomes = "Patch Occupation", counts = "Counts") # Update labels
simulation_table

simulation_table |>
  gtsave(
    "Lab2_Section9_Q3f.png",
    path = here("Labs", "Lab2")
  )
```
## 9.4 Relationship between plant growth rate and water
```{r}
set.seed(802)
runif(20, 0.01, 0.2)
```

## 9.5 Negative Binomial Distribution

$\mu = \lambda$
mean = 100, lambda = 100

$\kappa = \mu^2 / (\sigma^2 - \mu)$
$\kappa = 100^2 / (400^2 - 100)$
$\kappa = 10000 / (160000 - 100)$
$\kappa = 0.06253909$


```{r}
## 9.5.a
# first parameterization
kappa = 10000/ (160000 - 100)
nbinom_sim <- rnbinom(100000, size = kappa, mu = 100)
```

$\phi = \kappa / (\lambda + \kappa)$
$\phi = 0.06253909 / (100 + 0.06253909)$
$\phi = 0.000625$
```{r}
## 9.5.b
# second parameterization
phi <- kappa / (100 + kappa)
nbinom_sim_v2 <- rnbinom(100000, size = kappa, prob = phi)
```

```{r}
## 9.5.c
par(mfrow = c(1,2))
hist(nbinom_sim)
hist(nbinom_sim_v2)
```